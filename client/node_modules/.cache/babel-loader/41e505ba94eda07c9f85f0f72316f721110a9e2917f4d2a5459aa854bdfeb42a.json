{"ast":null,"code":"var _s = $RefreshSig$();\n// auth.js\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useApolloClient, gql } from '@apollo/client';\nconst VALIDATE_TOKEN = gql`\n  query ValidateToken($token: String!) {\n    validateToken(token: $token) \n    \n  }\n`;\nconst useAuth = () => {\n  _s();\n  const navigate = useNavigate();\n  const client = useApolloClient();\n  const token = localStorage.getItem('token');\n  const tokenIsValid = async () => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const {\n        data\n      } = await client.query({\n        query: VALIDATE_TOKEN,\n        variables: {\n          token: token\n        }\n      });\n      console.log(data.validateToken.isValid, \"hwbdwhdwwhbh\");\n      if (!data.validateToken.isValid) {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error validating token:', error);\n      navigate('/login');\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      await tokenIsValid();\n    })();\n  }, [token, navigate, client]);\n  return {};\n};\n_s(useAuth, \"KtXuu/D4LqLGaYpb3VLt+8ugqpY=\", false, function () {\n  return [useNavigate, useApolloClient];\n});\nexport default useAuth;","map":{"version":3,"names":["useEffect","useNavigate","useApolloClient","gql","VALIDATE_TOKEN","useAuth","_s","navigate","client","token","localStorage","getItem","tokenIsValid","data","query","variables","console","log","validateToken","isValid","error"],"sources":["/Users/aamiryaseen/blog-app/client/src/components/autth.js"],"sourcesContent":["// auth.js\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useApolloClient, gql } from '@apollo/client';\n\nconst VALIDATE_TOKEN = gql`\n  query ValidateToken($token: String!) {\n    validateToken(token: $token) \n    \n  }\n`;\n\nconst useAuth = () => {\n  const navigate = useNavigate();\n  const client = useApolloClient();\n  const token = localStorage.getItem('token');\n\n  const tokenIsValid = async () => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    try {\n      const { data } = await client.query({\n        query: VALIDATE_TOKEN,\n        variables: { token: token },\n      });\n      console.log(data.validateToken.isValid,\"hwbdwhdwwhbh\")\n      if (!data.validateToken.isValid) {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error validating token:', error);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await tokenIsValid();\n    })();\n  }, [token, navigate, client]);\n\n  return {};\n};\n\nexport default useAuth;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,EAAEC,GAAG,QAAQ,gBAAgB;AAErD,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,MAAM,GAAGN,eAAe,CAAC,CAAC;EAChC,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACH,KAAK,EAAE;MACVF,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAM;QAAEM;MAAK,CAAC,GAAG,MAAML,MAAM,CAACM,KAAK,CAAC;QAClCA,KAAK,EAAEV,cAAc;QACrBW,SAAS,EAAE;UAAEN,KAAK,EAAEA;QAAM;MAC5B,CAAC,CAAC;MACFO,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,aAAa,CAACC,OAAO,EAAC,cAAc,CAAC;MACtD,IAAI,CAACN,IAAI,CAACK,aAAa,CAACC,OAAO,EAAE;QAC/BZ,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Cb,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMY,YAAY,CAAC,CAAC;IACtB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,CAACH,KAAK,EAAEF,QAAQ,EAAEC,MAAM,CAAC,CAAC;EAE7B,OAAO,CAAC,CAAC;AACX,CAAC;AAACF,EAAA,CAjCID,OAAO;EAAA,QACMJ,WAAW,EACbC,eAAe;AAAA;AAiChC,eAAeG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}