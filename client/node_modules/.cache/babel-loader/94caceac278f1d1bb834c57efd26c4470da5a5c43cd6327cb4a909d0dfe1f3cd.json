{"ast":null,"code":"var _jsxFileName = \"/Users/aamiryaseen/blog-app/client/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN = gql`\n  mutation Login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      userId\n      username\n      token\n    }\n  }\n`;\nconst Login = ({\n  history\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [login, {\n    loading,\n    error\n  }] = useMutation(LOGIN, {\n    onCompleted: ({\n      login\n    }) => {\n      // Assuming the server returns a token upon successful login\n      const token = login === null || login === void 0 ? void 0 : login.token;\n      if (token) {\n        // Store the token in local storage or a secure storage mechanism\n        localStorage.setItem('token', token);\n        // Redirect to the homepage\n        history.push('/homepage');\n      }\n    }\n  });\n  const handleLogin = e => {\n    e.preventDefault();\n    login({\n      variables: {\n        username,\n        password\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don't have an acount? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"ktx4YuAQMIKvH9otcErnfUx2EzM=\", false, function () {\n  return [useMutation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","React","useState","useMutation","gql","jsxDEV","_jsxDEV","LOGIN","Login","history","_s","username","setUsername","password","setPassword","login","loading","error","onCompleted","token","localStorage","setItem","push","handleLogin","e","preventDefault","variables","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","required","type","value","onChange","target","disabled","message","to","_c","$RefreshReg$"],"sources":["/Users/aamiryaseen/blog-app/client/src/pages/Login.js"],"sourcesContent":["import { Link  } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nconst LOGIN = gql`\n  mutation Login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      userId\n      username\n      token\n    }\n  }\n`;  \n\nconst Login =({history})=>{\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [login, { loading, error }] = useMutation(LOGIN, {\n    onCompleted: ({ login }) => {\n      // Assuming the server returns a token upon successful login\n      const token = login?.token;\n      if (token) {\n        // Store the token in local storage or a secure storage mechanism\n        localStorage.setItem('token', token);\n        // Redirect to the homepage\n        history.push('/homepage');\n      }\n    },\n  });\n  const handleLogin = (e) => {\n    e.preventDefault();\n    login({ variables: { username, password } });\n  };\n  \n    return (\n        <div className=\"auth\">\n          <h1>Login</h1>\n          <form onSubmit={handleLogin}>\n            <input required type=\"text\"  value={username}\n            onChange={(e) => setUsername(e.target.value)}></input>\n            <input required type=\"password\" value={password}\n            onChange={(e) => setPassword(e.target.value)}></input>\n             <button type=\"submit\" disabled={loading}>\n          {loading ? 'Logging in...' : 'Login'}\n        </button>\n        {error && <p>Error: {error.message}</p>}\n            <span>Don't have an acount? <Link to=\"/register\">Register</Link> \n           </span>\n          </form>\n        </div>\n    )\n}\nexport default Login"],"mappings":";;AAAA,SAASA,IAAI,QAAS,kBAAkB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClD,MAAMC,KAAK,GAAGH,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,KAAK,GAAEA,CAAC;EAACC;AAAO,CAAC,KAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAE;IAAEC,OAAO;IAAEC;EAAM,CAAC,CAAC,GAAGd,WAAW,CAACI,KAAK,EAAE;IACrDW,WAAW,EAAEA,CAAC;MAAEH;IAAM,CAAC,KAAK;MAC1B;MACA,MAAMI,KAAK,GAAGJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,KAAK;MAC1B,IAAIA,KAAK,EAAE;QACT;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;QACpC;QACAV,OAAO,CAACa,IAAI,CAAC,WAAW,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;EACF,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBV,KAAK,CAAC;MAAEW,SAAS,EAAE;QAAEf,QAAQ;QAAEE;MAAS;IAAE,CAAC,CAAC;EAC9C,CAAC;EAEC,oBACIP,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBtB,OAAA;MAAAsB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd1B,OAAA;MAAM2B,QAAQ,EAAEV,WAAY;MAAAK,QAAA,gBAC1BtB,OAAA;QAAO4B,QAAQ;QAACC,IAAI,EAAC,MAAM;QAAEC,KAAK,EAAEzB,QAAS;QAC7C0B,QAAQ,EAAGb,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtD1B,OAAA;QAAO4B,QAAQ;QAACC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEvB,QAAS;QAChDwB,QAAQ,EAAGb,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrD1B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACI,QAAQ,EAAEvB,OAAQ;QAAAY,QAAA,EAC1CZ,OAAO,GAAG,eAAe,GAAG;MAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EACRf,KAAK,iBAAIX,OAAA;QAAAsB,QAAA,GAAG,SAAO,EAACX,KAAK,CAACuB,OAAO;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC1B,OAAA;QAAAsB,QAAA,GAAM,wBAAsB,eAAAtB,OAAA,CAACN,IAAI;UAACyC,EAAE,EAAC,WAAW;UAAAb,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAtB,EAAA,CArCKF,KAAK;EAAA,QAG2BL,WAAW;AAAA;AAAAuC,EAAA,GAH3ClC,KAAK;AAsCX,eAAeA,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}