{"ast":null,"code":"var _s2 = $RefreshSig$();\n// auth.js\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nconst VALIDATE_TOKEN = gql`\n  query ValidateToken($token: String!) {\n    validateToken(token: $token) {\n      isValid\n    }\n  }\n`;\nconst useAuth = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const tokenIsValid = async () => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const {\n        loading,\n        error,\n        data\n      } = await validateTokenQuery(token);\n      if (loading) {\n        // Handle loading state if needed\n        return;\n      }\n      if (error || !data.validateToken.isValid) {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error validating token:', error);\n      navigate('/login');\n    }\n  };\n  const validateTokenQuery = async token => {\n    _s();\n    return useQuery(VALIDATE_TOKEN, {\n      variables: {\n        token: token\n      }\n    });\n  };\n  _s(validateTokenQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  useEffect(() => {\n    tokenIsValid();\n  }, [token, navigate]);\n  return {};\n};\n_s2(useAuth, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\nexport default useAuth;","map":{"version":3,"names":["useEffect","useNavigate","useQuery","gql","VALIDATE_TOKEN","useAuth","_s2","_s","$RefreshSig$","navigate","token","localStorage","getItem","tokenIsValid","loading","error","data","validateTokenQuery","validateToken","isValid","console","variables"],"sources":["/Users/aamiryaseen/blog-app/client/src/components/autth.js"],"sourcesContent":["// auth.js\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\n\nconst VALIDATE_TOKEN = gql`\n  query ValidateToken($token: String!) {\n    validateToken(token: $token) {\n      isValid\n    }\n  }\n`;\n\nconst useAuth = () => {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n\n  const tokenIsValid = async () => {\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    try {\n      const { loading, error, data } = await validateTokenQuery(token);\n\n      if (loading) {\n        // Handle loading state if needed\n        return;\n      }\n\n      if (error || !data.validateToken.isValid) {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error validating token:', error);\n      navigate('/login');\n    }\n  };\n\n  const validateTokenQuery = async (token) => {\n    return useQuery(VALIDATE_TOKEN, {\n      variables: { token: token },\n    });\n  };\n\n  useEffect(() => {\n    tokenIsValid();\n  }, [token, navigate]);\n\n  return {};\n};\n\nexport default useAuth;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAE9C,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACpB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACH,KAAK,EAAE;MACVD,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAM;QAAEK,OAAO;QAAEC,KAAK;QAAEC;MAAK,CAAC,GAAG,MAAMC,kBAAkB,CAACP,KAAK,CAAC;MAEhE,IAAII,OAAO,EAAE;QACX;QACA;MACF;MAEA,IAAIC,KAAK,IAAI,CAACC,IAAI,CAACE,aAAa,CAACC,OAAO,EAAE;QACxCV,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CN,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAG,MAAOP,KAAK,IAAK;IAAAH,EAAA;IAC1C,OAAOL,QAAQ,CAACE,cAAc,EAAE;MAC9BiB,SAAS,EAAE;QAAEX,KAAK,EAAEA;MAAM;IAC5B,CAAC,CAAC;EACJ,CAAC;EAACH,EAAA,CAJIU,kBAAkB;IAAA,QACff,QAAQ;EAAA;EAKjBF,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,KAAK,EAAED,QAAQ,CAAC,CAAC;EAErB,OAAO,CAAC,CAAC;AACX,CAAC;AAACH,GAAA,CAtCID,OAAO;EAAA,QACMJ,WAAW;AAAA;AAuC9B,eAAeI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}